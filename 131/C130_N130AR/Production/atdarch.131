#! /bin/csh -f
#
#   Archive production netCDF data files for 2001-131 ACE-Asia
#    using the new ATD directory path
#
#   Must be run from a project's Production subdirectory
#
#  File adapted from file /jnet/local/proj/186/Production/atdarch.186
#    by Ron Ruth   13 October 2K
#
#   To find executable (non-comment) lines (from within `vi'), type:
#       /^[^#]
#
#  `vi' :map commands for annotating job completion:
#  :map g eea 
#  :map v AOK @ 
#
#
#  Check login (only "dmg" login allowed to run this script)
set user = `whoami`
if ($user == "dmg") then
   set dmg = "yes"
else
#  echo "${0}:  Only the 'dmg' login is allowed to run this script.  Quitting."
#  exit
   set dmg = "no"
endif
#
#  Get setup information for this project
@ plat = `pwd | sed -e "s/\(.*\)\([0-9][0-9][0-9]\)\(.*\)/\2/g"`
@ plat /= 100
if ($plat == 1) set PLATFORM = C130_N130AR
if ($plat == 8) set PLATFORM = Electra_N308D
set YEAR = `grep CY proj.info | sed -e "s/CY=//"`
set PROJ = `cat ../ProjectName`
#
#  set extent for Production NIMBUS netCDF file
set EXT = PNI.nc
#
# Set correct turbulence type
set TYPE = LRT
#set TYPE = HRT
#
#  set source directory
#set SDIR = $TEMP
set SDIR = $PROD_DATA
#set SDIR = $DATA_DIR
#
goto old
#
############################################################################
#  Automatically generate file list (adapted from "gentl")
#
#  Following code is untested.
#  One needs a way to combine the four cases into a single group with
#   flags, so some code doesn't need to be duplicated 4 times.
#  It probably belongs down near the nrnet command, since one
#  can then set the turbulence rate "on the fly" for each file.
#
pushd $DIR >& /dev/null
#
#  Find the netCDF data files
ls ${proj}?f??.cdf >& /dev/null
set result1 = $status
if ($result1 == 0) set files1 = `ls ${proj}?f??.cdf`
ls ${proj}?f??[a-gi-z].cdf >& /dev/null
set result2 = $status
if ($result2 == 0) set files2 = (`ls ${proj}?f??[a-z].cdf`)
ls ${proj}?f??h.cdf >& /dev/null
set result3 = $status
if ($result3 == 0) set files3 = (`ls ${proj}?f??h.cdf`)
ls ${proj}?f??[a-z]h.cdf >& /dev/null
set result4 = $status
if ($result4 == 0) set files4 = (`ls ${proj}?f??[a-z]h.cdf`)
#  Check results of search
if ( $result1 != 0 && $result2 != 0 && $result3 != 0 && $result4 != 0 ) then
  echo No netCDF files match the standard naming conventions for this project.
  goto quit
endif
popd >& /dev/null
#
#  Case #1, LRT without segments
if ($result1 == 0) then
  if ($debug == "yes") echo 'Case #1'
  set files = ($files1)
  set line = `echo $files | sed -e "s/$proj//g"`
  set fltnos = (`echo $line | sed -e "s/\.cdf//g"`)
  set fltnos = (`echo $fltnos | tr '[a-z]' '[A-Z]'`)
set SFILES = ($files)
set DFILES = ($fltnos)
#
#  Case #2, LRT with segments (skip HRT without segments)
if ($result2 == 0) then
  if ($debug == "yes") echo 'Case #2'
  set files = ($files2)
  set line = `echo $files | sed -e "s/$proj//g"`
  set fltnos = (`echo $line | sed -e "s/\.cdf//g"`)
  set fltnos = (`echo $fltnos | tr '[a-z]' '[A-Z]'`)
  @ num = 0
  foreach file ($files)
    @ num ++
#  Test file for HRT
    set test = `echo $file | grep -c 'h.cdf'`
    if ($test == 1) then
      set line = `ncdump -h $DIR/$file | grep -c "OutputRate = $HRT"`
      if ($line != 0) continue
    endif
#####################  code goes here   ###########

#
#  Case #3, HRT without segments (skip LRT with segment "H")
if ($result3 == 0) then
  if ($debug == "yes") echo 'Case #3'
  set files = ($files3)
  set line = `echo $files | sed -e "s/$proj//g"`
  set fltnos = (`echo $line | sed -e "s/\h.cdf//g"`)
  set fltnos = (`echo $fltnos | tr '[a-z]' '[A-Z]'`)
  @ num = 0
  foreach file ($files)
    @ num ++
#  Test file for HRT
    set line = `ncdump -h $DIR/$file | grep -c "OutputRate = $HRT"`
    if ($line == 0) continue
    endif
#####################  code goes here   ###########

#
#  Case #4, HRT with segments
if ($result4 == 0) then
  if ($debug == "yes") echo 'Case #4'
  set files = ($files4)
  set line = `echo $files | sed -e "s/$proj//g"`
  set fltnos = (`echo $line | sed -e "s/\h.cdf//g"`)
  set fltnos = (`echo $fltnos | tr '[a-z]' '[A-Z]'`)

#
############################################################################
#
old:
#
#  1st wave, 3rd wave and 4th wave
#set SFILES = ( \
#131rf01.cdf \
#131rf02.cdf \
#131rf03.cdf \
#131rf04.cdf \
#131rf05.cdf \
#131rf06.cdf \
#131rf07.cdf \
#131rf08.cdf \
#131rf09.cdf \
#131rf10.cdf \
#131rf11.cdf \
#131rf12.cdf \
#131rf13.cdf \
#131rf14.cdf \
#131rf15.cdf \
#131rf16.cdf \
#131rf17.cdf \
#131rf18.cdf \
#131rf19.cdf \
#)
#set DFILES = ( \
#RF01 \
#RF02 \
#RF03 \
#RF04 \
#RF05 \
#RF06 \
#RF07 \
#RF08 \
#RF09 \
#RF10 \
#RF11 \
#RF12 \
#RF13 \
#RF14 \
#RF15 \
#RF16 \
#RF17 \
#RF18 \
#RF19 \
#)
#
#  2nd wave
#set SFILES = ( \
#131rf18.cdf \
#131rf19.cdf \
#)
#set DFILES = ( \
#RF18 \
#RF19 \
#)
#
#  5th wave  (Rearchive after reprocessing)
#set SFILES = ( \
#131rf03.cdf \
#)
#set DFILES = ( \
#RF03 \
#)
#
#   th wave
#set SFILES = ( \
#)
#set DFILES = ( \
#)
#
#
#  Get started:
date
if ($#SFILES != $#DFILES) then
  echo " Number of source and destination file names don't match.  Quitting"
  exit 1
endif
#
set todo = $#SFILES
set num = 1
while ($num <= $todo)
  set SFILE = $SFILES[$num]
  set DFILE = $DFILES[$num]
  if (-r $SDIR/$SFILE) then
#
# Compose extended bitfile name
#  get flight date
    set line = `ncdump -h $SDIR/$SFILE | grep FlightDate`
    if ($status != 0) then
      echo Could not find FlightDate in netCDF file $file
      goto quit
    endif
#   Get rid of double quotes
    set line = `echo $line  | sed -e 's/\"//g'`
#   Get rid of time zone in date field, if extant
    set line = `echo $line | sed -e 's/UTC//'`
#   Test for styles #1 & 2
    if ($#line == 4) then
      set incnt1 = `echo $line[3] | wc -c`
      if ($incnt1 == 11) then
#   Style #1 (mm/dd/yyyy)
        set fltdate = `echo $line[3]`
      else if ($incnt1 == 10) then
#   Style #2 (" m/dd/yyyy)
        set fltdate = 0$line[3]
      else
        echo "Bug in script $0 decoding Case #1 flight date.  Notify author."
        goto quit
      endif
    else if ($#line == 5) then
      set incnt1 = `echo $line[3] | wc -c`
      set incnt2 = `echo $line[4] | wc -c`
      if ($incnt1 == 3 && $incnt2 == 7) then
#   Style #3, ( m/ d/yyyy)
        set fltdate = `echo 0$line[3]0$line[4]`
#   Style #4 (mm/ d/yyyy)
      else if ($incnt1 == 4 && $incnt2 == 7) then
        set fltdate = `echo $line[3]0$line[4]`
      else
#   Unknown date style
        echo "Bug in script $0 decoding Case #1 flight date.  Notify author."
        goto quit
      endif
    else
#   Unknown date style
      echo "Bug in script $0 decoding Case #1 flight date.  Notify author."
      goto quit
    endif
    set DATE = `echo $fltdate | awk -F/ '{print $3$1$2}'`
#
#  Get time interval
    set tline = `ncdump -h $SDIR/$SFILE | grep TimeInterval`
    if ($status != 0) then
      echo Could not find TimeInterval in netCDF file $file
      goto quit
    endif
    shift tline
    shift tline
    @ pass = 1
newtime1:
    echo $tline | grep , >& /dev/null
#   Check for multiple time intervals
    if ($status == 0) then
      set multtime = "yes"
    else
      set multtime = "no"
    endif
#  Set time interval
    set flttime = `echo $tline[1] | sed -e 's/\"//g'`
    if ($status != 0) then
      echo Could not decode TimeInterval in netCDF file $file
      goto quit
    endif
    set flttime = `echo $flttime | sed -e 's/-/\ /'`
    if ($status != 0) then
      echo Could not decode TimeInterval in netCDF file $file
      goto quit
    endif
    if ($multtime == "yes") then
      set flttime = `echo $flttime | sed -e 's/\,//'`
      if ($status != 0) then
        echo Could not decode multiple TimeInterval in netCDF file $file
        goto quit
      endif
    endif
    set ST = `echo $flttime[1] | awk -F: '{print $1$2$3}'`
    set ET = `echo $flttime[2] | awk -F: '{print $1$2$3}'`
#
#  Archive the file (if the "dmg" login)
    if ($dmg == "yes") then
       echo \
      nrnet msput $SDIR/$SFILE l df=tr r \
        flnm=/ATD/DATA/$YEAR/$PROJ/$PLATFORM/$TYPE/$DFILE.$DATE.${ST}_$ET.$EXT \
        rtpd=32767 name=RAF proj=41113009 wpwd=RAFDMG
    else
      echo msput $SDIR/$SFILE l df=tr r \
        flnm=/ATD/DATA/$YEAR/$PROJ/$PLATFORM/$TYPE/$DFILE.$DATE.${ST}_$ET.$EXT \
        rtpd=32767 name=RAF proj=41113009 wpwd=RAFDMG
    endif
    @ num ++
  else
    echo " Cannot access file $SDIR/$SFILE"
    exit 1
  endif
end
#
exit
#
#  Remove dead data file (after reprocessed RF03)
 echo \
nrnet msrm  % r flnm=/ATD/DATA/2001/ACE-Asia/C130_N130AR/LRT/RF03.20010404.000001_085659.PNI.nc wpwd=RAFDMG
#
#  MSS path for all bitfiles listed below:  /ATD/DATA/2001/ACE-Asia/C130_N130AR/LRT/
#
#  1st wave
#  Job(s) submitted on Fri Aug 17 15:47:59 MDT 2001
# Sequence number = LN9444 -- RF01.20010330.234000_063401.PNI.nc -- OK @ 17 Aug 2001 16:17:27
# Sequence number = LN9475 -- RF02.20010401.234300_081330.PNI.nc -- OK @ 17 Aug 2001 16:34:22
# Sequence number = LN9508 -- RF03.20010404.000001_085659.PNI.nc -- OK @ 17 Aug 2001 16:29:01
# Sequence number = LN9541 -- RF04.20010406.003101_094402.PNI.nc -- OK @ 17 Aug 2001 16:34:27
# Sequence number = LN9576 -- RF05.20010408.031500_103634.PNI.nc -- OK @ 17 Aug 2001 16:17:04
# Sequence number = LN9609 -- RF06.20010411.000100_071546.PNI.nc -- OK @ 17 Aug 2001 16:19:57
# Sequence number = LN9640 -- RF07.20010411.235400_091401.PNI.nc -- OK @ 17 Aug 2001 16:10:29
# Sequence number = LN9671 -- RF08.20010413.001501_084725.PNI.nc -- OK @ 17 Aug 2001 15:58:42
# Sequence number = LN9702 -- RF09.20010416.235816_092722.PNI.nc -- OK @ 17 Aug 2001 16:00:09
# Sequence number = LN9733 -- RF10.20010417.234800_090326.PNI.nc -- OK @ 17 Aug 2001 15:59:56
# Sequence number = LN9764 -- RF11.20010419.235700_092030.PNI.nc -- OK @ 17 Aug 2001 16:09:51
# Sequence number = LN9795 -- RF12.20010422.224500_080743.PNI.nc -- OK @ 17 Aug 2001 16:08:36
# Sequence number = LN9826 -- RF13.20010423.234700_091230.PNI.nc -- OK @ 17 Aug 2001 16:35:53
# Sequence number = LN9857 -- RF14.20010424.235500_091748.PNI.nc -- OK @ 17 Aug 2001 16:08:44
# Sequence number = LN9888 -- RF15.20010427.003600_100853.PNI.nc -- OK @ 17 Aug 2001 16:35:46
# Sequence number = LN9921 -- RF16.20010429.234900_084015.PNI.nc -- OK @ 17 Aug 2001 16:18:59
# Sequence number = LN9952 -- RF17.20010430.235500_091941.PNI.nc -- OK @ 17 Aug 2001 16:36:43
# Sequence number = LN9983 -- RF18.20010502.001610_091605.PNI.nc -- OK @ 17 Aug 2001 16:21:11
# Sequence number = LN0018 -- RF19.20010503.234000_073555.PNI.nc -- OK @ 17 Aug 2001 16:32:20
#
#  2nd wave
#  Job(s) submitted on Fri Aug 31 11:31:44 MDT 2001
# Sequence number = LN6412 -- RF18.20010502.001900_091605.PNI.nc -- OK @ 31 Aug 2001 11:38:37
# Sequence number = LN6443 -- RF19.20010503.234000_073555.PNI.nc -- OK @ 31 Aug 2001 11:38:14
#
#  3rd wave (rearchive after Lyman-Alpha merge)
#  Job(s) submitted on Thu Sep  6 14:10:16 MDT 2001
# Sequence number = LN8415 -- RF01.20010330.234000_063401.PNI.nc -- OK @ 6 Sep 2001 14:36:53
# Sequence number = LN8446 -- RF02.20010401.234300_081330.PNI.nc -- OK @ 6 Sep 2001 14:35:41
# Sequence number = LN8479 -- RF03.20010404.000001_085659.PNI.nc -- OK @ 6 Sep 2001 14:36:46
# Sequence number = LN8512 -- RF04.20010406.003101_094402.PNI.nc -- OK @ 6 Sep 2001 14:38:46
# Sequence number = LN8545 -- RF05.20010408.031500_103634.PNI.nc -- OK @ 6 Sep 2001 14:32:30
# Sequence number = LN8578 -- RF06.20010411.000100_071546.PNI.nc -- OK @ 6 Sep 2001 14:32:21
# Sequence number = LN8612 -- RF07.20010411.235400_091401.PNI.nc -- OK @ 6 Sep 2001 14:34:51
# Sequence number = LN8643 -- RF08.20010413.001501_084725.PNI.nc -- OK @ 6 Sep 2001 14:34:42
# Sequence number = LN8674 -- RF09.20010416.235816_092722.PNI.nc -- OK @ 6 Sep 2001 14:33:40
# Sequence number = LN8705 -- RF10.20010417.234800_090326.PNI.nc -- OK @ 6 Sep 2001 14:23:55
# Sequence number = LN8736 -- RF11.20010419.235700_092030.PNI.nc -- OK @ 6 Sep 2001 14:34:04
# Sequence number = LN8767 -- RF12.20010422.224500_080743.PNI.nc -- OK @ 6 Sep 2001 14:34:12
# Sequence number = LN8798 -- RF13.20010423.234700_091230.PNI.nc -- OK @ 6 Sep 2001 14:39:25
# Sequence number = LN8829 -- RF14.20010424.235500_091748.PNI.nc -- OK @ 6 Sep 2001 14:31:33
# Sequence number = LN8860 -- RF15.20010427.003600_100853.PNI.nc -- OK @ 6 Sep 2001 14:31:45
# Sequence number = LN8891 -- RF16.20010429.234900_084015.PNI.nc -- OK @ 6 Sep 2001 14:31:24
# Sequence number = LN8922 -- RF17.20010430.235500_091941.PNI.nc -- OK @ 6 Sep 2001 14:40:54
# Sequence number = LN8953 -- RF18.20010502.001900_091605.PNI.nc -- OK @ 6 Sep 2001 14:41:33
# Sequence number = LN8988 -- RF19.20010503.234000_073555.PNI.nc -- OK @ 6 Sep 2001 14:40:43
#
#  4th wave (after skeleton rerun)
#  Job(s) submitted on Fri Sep  7 12:52:53 MDT 2001
# Sequence number = LN9392 -- RF01.20010330.234000_063401.PNI.nc -- OK @ 7 Sep 2001 12:56:46
# Sequence number = LN9423 -- RF02.20010401.234300_081330.PNI.nc -- OK @ 7 Sep 2001 12:57:55
# Sequence number = LN9456 -- RF03.20010404.000001_085659.PNI.nc -- OK @ 7 Sep 2001 12:58:07
# Sequence number = LN9491 -- RF04.20010406.003101_094402.PNI.nc -- OK @ 7 Sep 2001 12:58:18
# Sequence number = LN9524 -- RF05.20010408.031500_103634.PNI.nc -- OK @ 7 Sep 2001 12:58:23
# Sequence number = LN9557 -- RF06.20010411.000100_071546.PNI.nc -- OK @ 7 Sep 2001 13:04:50
# Sequence number = LN9588 -- RF07.20010411.235400_091401.PNI.nc -- OK @ 7 Sep 2001 13:06:10
# Sequence number = LN9619 -- RF08.20010413.001501_084725.PNI.nc -- OK @ 7 Sep 2001 13:05:52
# Sequence number = LN9650 -- RF09.20010416.235816_092722.PNI.nc -- OK @ 7 Sep 2001 13:06:19
# Sequence number = LN9681 -- RF10.20010417.234800_090326.PNI.nc -- OK @ 7 Sep 2001 13:07:27
# Sequence number = LN9712 -- RF11.20010419.235700_092030.PNI.nc -- OK @ 7 Sep 2001 13:14:48
# Sequence number = LN9743 -- RF12.20010422.224500_080743.PNI.nc -- OK @ 7 Sep 2001 13:14:17
# Sequence number = LN9774 -- RF13.20010423.234700_091230.PNI.nc -- OK @ 7 Sep 2001 13:14:35
# Sequence number = LN9807 -- RF14.20010424.235500_091748.PNI.nc -- OK @ 7 Sep 2001 13:14:26
# Sequence number = LN9838 -- RF15.20010427.003600_100853.PNI.nc -- OK @ 7 Sep 2001 13:22:02
# Sequence number = LN9871 -- RF16.20010429.234900_084015.PNI.nc -- OK @ 7 Sep 2001 13:21:29
# Sequence number = LN9902 -- RF17.20010430.235500_091941.PNI.nc -- OK @ 7 Sep 2001 13:21:55
# Sequence number = LN9934 -- RF18.20010502.001900_091605.PNI.nc -- OK @ 7 Sep 2001 13:21:41
# Sequence number = LN9965 -- RF19.20010503.234000_073555.PNI.nc -- OK @ 7 Sep 2001 13:27:07
#
#  5th wave  (Rearchive after reprocessing)
#  Job(s) submitted on Mon Oct 22 15:56:08 MDT 2001
# Sequence number = LN1077 -- RF03.20010403.235800_085659.PNI.nc -- OK @ 22 Oct 2001 15:58:17
#
#   (delete previous, bad file)
#  Job(s) submitted on Mon Oct 22 15:58:56 MDT 2001
# Sequence number = LN1176 -- RF03.20010404.000001_085659.PNI.nc -- OK @ 22 Oct 2001 15:58:59
#
#   th wave
#  Job(s) submitted on 
#
