#! /bin/csh -f
#
#  Save a project's pertinent NIMBUS support files to a tar file
#   (in prepararation for archival to the SCD Mass Store System)
#
#  Written by Ronald L. Ruth                                           Nov 1995
#  Revised by RLR (automatically retrieve FY, PROJ and PROJNAME)    11 Jan 1996
#  Revised by RLR (fix order of commands to do the above)           30 May 1996
#  Revised by RLR (fix "ProjectName" file name)                     03 Sep 1996
#  Revised by RLR (clarify file selection instructions)             25 Jun 1997
#
#  Note:  Create a copy of, modify and run this script from a project's 
#           "Production" directory.
#
#  Assumptions:
#   1.  Directory structure for projects is $LOCAL/proj/<3-digit project #>
#           having a "Production" subdirectory
#   2.  Project's name (only its name!) is in the file $LOCAL/proj/ProjectName
#   3.  A "proj.info" file exists in the project's "Production" subdirectory
#
#  Get setup information for this project
set PROJ = `pwd | sed -e "s/[a-zA-Z\/]//g"`
set PROJDIR = $LOCAL/proj/$PROJ
set FY = `grep FY proj.info | sed -e "s/FY=//"`
cd $PROJDIR
set PROJNAME = `cat ProjectName`
set OFILE = "$PROJDIR/Production/$PROJ.tar"
#
tar chlvf $OFILE \
Categories \
Defaults \
DependTable \
LowRateVars \
PMSspecs \
ProjectName \
README.processing \
UserNames \
VarDB \
despike \
header \
header.new1107 \
hold.despike \
fastexdocs/dqsumm_fastex \
fastexdocs/dqsumm_fig1a.ps \
fastexdocs/dqsumm_fig1b.ps \
fastexdocs/dqsumm_fig2.ps \
fastexdocs/dqsumm_fig3.ps \
fastexdocs/dqsumm_fig4.ps \
fastexdocs/variables.fastex \
fastexdocs/variables.fastex.auto \
fastexdocs/variables.fastex.fm \
fastexdocs/variables.fastex.fm.backup \
Production/FlightGroups \
Production/Flight_1 \
Production/Flight_2 \
Production/Flight_3 \
Production/Flight_4 \
Production/Flight_5 \
Production/Flight_6 \
Production/Flight_7 \
Production/MSCP_out.891 \
Production/Mail.891 \
Production/arch.891 \
Production/logFile_LRT.1 \
Production/logFile_LRT.2 \
Production/logFile_LRT.3 \
Production/logFile_LRT.4 \
Production/logFile_LRT.5 \
Production/logFile_LRT.6 \
Production/logFile_LRT.7 \
Production/ops4.html \
Production/production.log.2d \
Production/proj.info \
Production/taplog.891 \
Production/taplog.ads.891 \
Production/taplog.pms2d.891 \
Production/tarit.891 \
Production/tp2ms.summary \
Production/archive/2d2ms.job \
Production/archive/remove \
Production/archive/tapes.891 \
Production/archive/tp2ms.job \
Production/archive/restricted/org_arch.891

#
#  At this point one needs a list of files immediately under the above "tar
#   command.  As a starting point, one can use the `vi' command:   !!ls ..
#   to get a list of files in the project's directory and edit out the
#   unneeded ones.
#  For the Production subdirectory, one can use this command:
#                       !!ls
#  For a subdirectory under Production (e.g., archive), one can repeat this:
#                       !!ls archive
#  For a subdirectory off the main project directory, use a command such as:
#                       !!ls ../<directory>
#   (Execute these commands starting with the cursor at the first "#" line
#    below the `tar' command.  The `vi' command `!!ls' replaces the current
#    line with its output.)
#  Other subdirectories may also have files that need to be archived.
#  After you get the list of files, don't forget to add the subdirectory
#  name (if any) to the beginning of each file name and add a trailing
#  <space> and backslash (\) to each file name (except the last one), so
#  the `tar' command gets the entire list of files.
#
#
#  Get tar directory list for archiving
set dfile = $OFILE.dir
echo " Directory list for file $PROJ.tar" >! $dfile
echo "  Support files for Project $FY-$PROJ $PROJNAME" >> $dfile
set dt = `date`
echo "  Archive created on $dt" >> $dfile
echo " "  >> $dfile
tar tvf $OFILE >> $dfile
#
exit
