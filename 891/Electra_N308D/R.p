------------------------------------------------------------------------
            FASTEX (PROJECT NO. 7-891) PROCESSING NOTES

           Krista Laursen, FASTEX Electra Project Manager
                          19 June 1997
------------------------------------------------------------------------

In general, processing of FASTEX data is a straightforward process.
Both the "FlightGroups" and "Flight_X" (where X is the flight
number) files have been set up to make sure that the correct
calibration coefficients are read in for specific flights and to
make sure that unnecessary and/or bad data variables are not output.

Special processing steps are required for only one of the seven
Electra research flights flown during FASTEX, research flight 7
(RF07).  Special processing is required to generate correctly
filtered dewpoint (DPXC) data for the latter flight.  The program
MATLAB is used to generate the filtered DPXC data.  Dick Friesen
developed the required MATLAB routine, and this routine, along with
a complete description of the steps needed to generate the filtered
dewpoint data and to correctly incorporate the final DPXC data into
the main netCDF file, is described in the section below.  The text
that follows can also be found in the file "FASTEX_dewpoint_proc"
in the directory "/home/users/dick/matlab."

Note that only low-rate production data were generated and archived
for FASTEX.  High-rate data will only be generated and distributed
on an as-requested basis.

*************************************************************************
                    FASTEX DEWPOINT SPECIAL PROCESSING
                         DPTC ON FLT RF07
 
   On flight seven of FASTEX both dewpoint instruments had large amplitude
oscillations on the order of 2 to 3 degrees. The investigatior considered this
oscillation to large to be useable so we decided to filter the DPTC data
after NIMBUS processing and then merge it back into the NIMBUS production file.
   The filtered data is much improved over the low level research period of
approximately 19:50 to 00:10. This is the period when the Electra was flying
in heavy clouds and precipitation.
   MATLAB was used to generate a linear phase FIR digital lowpass filter with
a cut-off at about 20sec, approximately equal to the oscillation period of 
the dewpoint instrument. MATLAB uses what it calls "M" files as input command
files. The M file for the filtering process in given below. It also calculates
and displays spectra of the filtered and unfiltered data. (% preceeds comment
lines.)
   *****NOTE: Because DPTC was filtered after NIMBUS processing and merged 
              into the original file as DPXC, other variables that use DPXC
              in their calculations will still have the oscillation. The only
              variable that is "fixed" in the production data set is DPXC.
 
 
                          MATLAB "M" file for FASTEX processing
                                  MATLAB 5.0.0.4064
 
 
 
% This M-file was used to filter a variable from a netCDF file generated by
% NIMBUS. The filtered variable was then merged back into the original netCDF 
% file. Here is the sequence. (FASTEX RF07 filter DPTC 2/97)
%
%  * run n2asc to create ascii file of variable(s) you wish to work with.
%  * remove variable labels from file
%  * move file to matlab directory and use the fopen and fscanf functions to
%    read in data (see below).
%  * use matlab to filter data (matlab function filter)
%  * write data out to file using fprintf and preserve ascii format.
%    (this was only partially successful. the ascii input file had time format
%     21:00:02 and the matlab out was 21:  : 2, blanks instead of zeroes.
%    This was fixed with vi using :g/X/s//Y/g command. Don't forget roll over
%    to midnight in time 23:59:59 to 00:00:01 etc.
%  * Add label of variable to ascii output file and run asc2cdf
%  * run ncmerge to merge back into original file
%
%
% M-file to read time-of-day and data.
% Then change data and write to file.
clear all;
fid=fopen('test.txt');
a=fscanf(fid,'%2d%*c%2d%*c%2d%f',[4 inf]);
fclose(fid);
b=a';
%
%filter data
%
% fir1 implements windowed linear phase FIR digital filter, n+1 coefficients
% of an order n lowpass filter, Hamming windowed with cutoff frequency Wn.
% u=fir1(n,Wn) returns row vector u containing the n+1 coefficients.
%
u=fir1(199,.1);
% y=filter(u,a,x) filters the data in vector x with the filter described by 
% coefficient vectors a and b to create the filtered data vector y.
y=filter(u,1,b(:,4));
for i=1:size(b(:,4))
x(i)=i;
end
%
%write filtered data to file
%
t=[b(:,1:3),y]';
fid=fopen('exper.txt','w');
fprintf(fid,'%2.0d:%2.0d:%2.0d     %5.3f\n',t);
fclose(fid)
 
% take FFT of filtered data vector y using 1024 points.
z=fft(y,1024);
% take FFT of un-filtered input data vector flnm.dat.
v=fft(b(:,4),1024);
% compute power spectral density of both vectors.
pyy=z.*conj(z)/1024;
pmm=v.*conj(v)/1024;
% use 512 points, figure frequency axis and plot.
f=(0:511)/1024;
loglog(f(1:512),pyy(1:512),f(1:512),pmm(1:512))
%plot(x,b(:,4),x,y(:,1))
%ylabel('Magnitude')
%xlabel('time')
%title('Dewpoint')
print -dpsc dewpoint

